- name: iperf3-client-step
  inputs:
    parameters:
      - name: bandwidth
      - name: test-name
      - name: client-nodes
      - name: server-nodes
      - name: test-duration
  script:
    image: bitnami/kubectl
    command: [bash]
    source: |
      set -ex

      # Generate test pairs
      CLIENTS=$(echo '{{inputs.parameters.client-nodes}}' | jq -r '.[]')
      SERVERS=$(echo '{{inputs.parameters.server-nodes}}' | jq -r '.[]')

      for CLIENT in $CLIENTS; do
        for SERVER in $SERVERS; do
          TEST_NAME="iperf3-client-{{inputs.parameters.test-name}}-${CLIENT}-to-${SERVER}"
          cat <<EOF | kubectl apply -f -
      apiVersion: v1
      kind: Pod
      metadata:
        name: $TEST_NAME
        namespace: argocd
        labels:
          test-type: iperf3-client
          workflow: iperf3-test
      spec:
        nodeSelector:
          kubernetes.io/hostname: "$CLIENT"
        containers:
        - name: client
          image: nicolaka/netshoot
          command:
            - /bin/bash
            - -c
            - |
              echo "Starting iperf3 test..."
              SERVER_POD="iperf3-server-${SERVER}"

              # Run test
              echo "Running iperf3 test..."
              RESULT=\$(iperf3 -c \$SERVER_POD.argocd.svc.cluster.local -b {{inputs.parameters.bandwidth}} -t {{inputs.parameters.test-duration}} -J)

              # Extract and verify bandwidth
              BANDWIDTH=\$(echo "\$RESULT" | jq -r '.end.sum_received.bits_per_second')
              echo "Measured bandwidth: \$BANDWIDTH"

              if [ -z "\$BANDWIDTH" ] || [ "\$BANDWIDTH" = "null" ]; then
                echo "Error: Invalid bandwidth value"
                exit 1
              fi

              # Create metrics payload
              METRICS_PAYLOAD="# TYPE iperf3_bandwidth_bits_per_second gauge
              iperf3_bandwidth_bits_per_second{test_name=\\\"{{inputs.parameters.test-name}}\\\",client_node=\\\"${CLIENT}\\\",server_node=\\\"${SERVER}\\\"} \$BANDWIDTH"

              # Push metrics with error checking
              echo "\$METRICS_PAYLOAD" | curl -v --data-binary @- http://pushgateway.monitoring.svc.cluster.local:9091/metrics/job/iperf3_test

              if [ \$? -eq 0 ]; then
                echo "Successfully pushed metrics to Prometheus"
              else
                echo "Failed to push metrics to Prometheus"
                exit 1
              fi
          resources:
            requests:
              memory: "64Mi"
              cpu: "250m"
            limits:
              memory: "128Mi"
              cpu: "500m"
        restartPolicy: Never
      EOF
        done
      done

      # Wait for all tests to complete
      echo "Waiting for all tests to complete..."
      kubectl wait --for=condition=complete pod -l test-type=iperf3-client -n argocd --timeout=300s || true
  activeDeadlineSeconds: 600
